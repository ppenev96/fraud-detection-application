spring.application.name=fraud-detection-application

#JPA
spring.datasource.url=jdbc:postgresql://postgres:5432/fraud_detection?createDatabaseIfNotExist=true&currentSchema=fraud_detection
spring.datasource.username=admin
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.generate-ddl=true
spring.jpa.properties.jakarta.persistence.create-database-schemas=true
spring.jpa.properties.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.default_schema=fraud_detection

#Logging
logging.level.org.springframework=INFO

#Kafka // Multiple concurrent consumers could be added
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=fraud-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.concurrency=1
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.properties.spring.json.trusted.packages=com.frauddetectionapplication.model.dto
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Redis
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=admin
spring.data.redis.timeout=2000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=1
spring.data.redis.lettuce.pool.max-wait=2000ms

#Custom
kafka.transaction.topic=transactions-topic
max.transactions.per.minute=10
distance.threshold=300.0
time.threshold=1800
